{"version":3,"file":"static/js/555.9cd58e14.chunk.js","mappings":"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","sources":["components/columnForm/ColumnForm.jsx","components/calendar/DatePicker.jsx","components/addCardForm/AddCardForm.jsx","components/card/Card.jsx","components/columns/Columns.jsx","components/filterPopup/FilterPopup.jsx","images/bcgArrey.js","components/ScreensPage/ScreensPage.styled.js","components/ScreensPage/ScreensPage.jsx","components/modal/PopUp.jsx"],"sourcesContent":["import { selectCurrentTheme } from 'redux/auth/auth-slice';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport Icon from 'components/icon/Icon';\nimport './columnForm.scss';\nimport { useParams } from 'react-router';\nimport { addNewColumn } from 'redux/workplace/workplace-operation';\nimport { editColumnById } from 'redux/workplace/workplace-operation';\nimport { useDispatch } from 'react-redux';\n\nconst ColumnForm = props => {\n  const { title, id, closeModal } = props;\n  const theme = useSelector(selectCurrentTheme);\n  const [error, setError] = useState('');\n  const [columnName, setColumnName] = useState(title || '');\n  const { boardName } = useParams();\n  const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    const InputTitle = e.target.elements.title.value.trim();\n    e.preventDefault();\n\n    if (InputTitle === '') {\n      setError('Required');\n      return;\n    } else if (title && id) {\n      if (InputTitle === title) {\n        closeModal();\n        return;\n      }\n      dispatch(\n        editColumnById({\n          name: InputTitle,\n          id: id,\n        })\n      );\n      closeModal();\n    } else {\n      dispatch(addNewColumn({ idBoard: boardName, newColumn: InputTitle }));\n      closeModal();\n\n      return;\n    }\n    closeModal();\n  };\n\n  return (\n    <form className=\"columnForm\" onSubmit={onSubmit}>\n      <p className={`columnTitle theme-${theme}`}>\n        {!title ? 'Add' : 'Edit'} column\n      </p>\n      <div className=\"columnInputWrapper\">\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          className={`titleInput theme-${theme}`}\n          value={columnName}\n          required\n          minLength=\"1\"\n          maxLength=\"25\"\n          onChange={e => setColumnName(e.target.value)}\n        />\n        {error && <p className={`errorMessage theme-${theme}`}>{error}</p>}\n      </div>\n      <button\n        className={`columnButton theme-${theme}`}\n        type=\"submit\"\n        aria-label={!title ? 'Add' : 'Edit'}\n      >\n        <span className={`columnIcon theme-${theme}`}>\n          <Icon id={'plus'} width={14} height={14} />\n        </span>\n        {!title ? 'Add' : 'Edit'}\n      </button>\n    </form>\n  );\n};\n\nexport default ColumnForm;\n","import React from 'react';\nimport { forwardRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { format, isToday } from 'date-fns';\nimport { selectCurrentTheme } from 'redux/auth/auth-slice';\nimport DatePicker from 'react-datepicker';\nimport './datePicker.scss';\nimport Icon from 'components/icon/Icon';\n\nconst DateCalendar = ({ selected, onSelect }) => {\n  const currentTheme = useSelector(selectCurrentTheme);\n\n  const formatDate = date => {\n    if (isToday(date)) {\n      return `Today, ${format(date, 'MMMM d')}`;\n    }\n    return format(date, 'EEEE, MMMM d');\n  };\n\n  const ExampleCustomInput = forwardRef(({ _, onClick }, ref) => (\n    <button\n      type=\"button\"\n      className={`button-custom-input theme-${currentTheme}`}\n      onClick={onClick}\n      ref={ref}\n    >\n      <span className=\"input-custom-text\">{formatDate(selected)}</span>\n      <Icon id={'chevron-down'} width={18} height={18} />\n    </button>\n  ));\n  return (\n    <div>\n      <DatePicker\n        selected={selected}\n        onSelect={onSelect}\n        minDate={new Date()}\n        calendarStartDay={1}\n        customInput={<ExampleCustomInput />}\n        calendarClassName={`theme-${currentTheme}`}\n      />\n    </div>\n  );\n};\n\nexport default DateCalendar;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectCurrentTheme } from 'redux/auth/auth-slice';\nimport { Formik } from 'formik';\nimport { Field } from 'formik';\nimport Icon from 'components/icon/Icon';\nimport DateCalendar from 'components/calendar/DatePicker';\nimport './addCardForm.scss';\nimport * as yup from 'yup';\nimport { addNewTask, editTaskById } from 'redux/workplace/workplace-operation';\n\nconst AddCardForm = ({\n  columnId = null,\n  taskId = null,\n  closeModal,\n  data: { title, description, labelColor, deadLine } = {},\n}) => {\n  const dispatch = useDispatch();\n  const normalizedDeadLine = deadLine ? deadLine : new Date();\n  const theme = useSelector(selectCurrentTheme);\n  const schema = yup.object().shape({\n    title: yup\n      .string()\n      .max(25, 'Name can contain 25 symbols max')\n      .trim('No leading or trailing spaces')\n      .min(1, 'Name needs to be at least 1 char')\n      .required('This field is required'),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        columnId,\n        _id: taskId,\n        description: description,\n        title: title || '',\n        labelColor: labelColor || 'without',\n        deadLine: new Date(normalizedDeadLine),\n      }}\n      validationSchema={schema}\n      validate={values => {\n        const errors = {};\n        if (!values.title) {\n          errors.title = 'Required';\n        }\n        if (!values.description) {\n          errors.description = 'Required';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        if (!columnId && taskId) {\n          //Робимо PATCH запит при сабміті\n          // console.log('Updating a card ' + values);\n          dispatch(editTaskById(values));\n          setSubmitting(false);\n          closeModal();\n        } else if (!taskId && columnId) {\n          //Робимо POST запит при сабміті\n          // console.log('Creating a new card ' + values);\n          dispatch(addNewTask(values));\n          setSubmitting(false);\n          closeModal();\n        } else {\n          console.log('Oops! Something went wrong :(');\n          return;\n        }\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n      }) => (\n        <form className={`add-form theme-${theme}`} onSubmit={handleSubmit}>\n          <p className={`add-form-title theme-${theme}`}>\n            {!columnId && taskId ? 'Edit card' : 'Add card'}\n          </p>\n          <div className=\"add-form-wrap\">\n            <div className=\"add-form-email-wrap\">\n              <input\n                className={`add-form-input email theme-${theme}`}\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.title}\n              />\n              <p className={`add-form-input-error theme-${theme}`}>\n                {errors.title && touched.title && errors.title}\n              </p>\n            </div>\n            <div className=\"add-form-desc-wrap\">\n              <textarea\n                className={`add-form-input desc theme-${theme}`}\n                rows={7}\n                name=\"description\"\n                placeholder=\"Description\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.description}\n              />\n              <p className={`add-form-input-error theme-${theme}`}>\n                {errors.desc && touched.desc && errors.desc}\n              </p>\n            </div>\n            <div>\n              <div>\n                <p className={`add-form-group-title theme-${theme}`}>\n                  Label color\n                </p>\n                <div\n                  className=\"add-form-radio-group\"\n                  role=\"group\"\n                  aria-labelledby=\"labelColor-group\"\n                >\n                  <label className=\"add-form-radio low\">\n                    <Field\n                      className=\"visually-hidden\"\n                      type=\"radio\"\n                      name=\"labelColor\"\n                      value=\"low\"\n                    />\n                    <span className=\"outer-circle\"></span>\n                    <span className=\"inner-circle\"></span>\n                  </label>\n                  <label className=\"add-form-radio medium\">\n                    <Field\n                      className=\"visually-hidden\"\n                      type=\"radio\"\n                      name=\"labelColor\"\n                      value=\"medium\"\n                    />\n                    <span className=\"outer-circle\"></span>\n                    <span className=\"inner-circle\"></span>\n                  </label>\n                  <label className=\"add-form-radio high\">\n                    <Field\n                      className=\"visually-hidden\"\n                      type=\"radio\"\n                      name=\"labelColor\"\n                      value=\"high\"\n                    />\n                    <span className=\"outer-circle\"></span>\n                    <span className=\"inner-circle\"></span>\n                  </label>\n                  <label className=\"add-form-radio without\">\n                    <Field\n                      className=\"visually-hidden\"\n                      type=\"radio\"\n                      name=\"labelColor\"\n                      value=\"without\"\n                    />\n                    <span className={`outer-circle theme-${theme}`}></span>\n                    <span className={`inner-circle theme-${theme}`}></span>\n                  </label>\n                </div>\n              </div>\n            </div>\n            <div className=\"add-form-deadline\">\n              <p className={`add-form-deadline-title theme-${theme}`}>\n                Deadline\n              </p>\n              <DateCalendar\n                selected={values.deadLine}\n                onSelect={date => setFieldValue('deadLine', date)}\n              />\n            </div>\n            <button\n              className={`add-form-submit theme-${theme}`}\n              type=\"submit\"\n              disabled={isSubmitting}\n              aria-label={!columnId && taskId ? 'Edit' : 'Add'}\n            >\n              <div className={`add-form-icon-wrap theme-${theme}`}>\n                <Icon id=\"plus\" width={14} height={14} />\n              </div>\n              {!columnId && taskId ? 'Edit' : 'Add'}\n            </button>\n          </div>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddCardForm;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport EllipsisText from 'react-ellipsis-text';\nimport { selectCurrentTheme } from 'redux/auth/auth-slice';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport Icon from '../icon/Icon';\nimport PopUp from 'components/modal/PopUp';\nimport AddCardForm from 'components/addCardForm/AddCardForm';\nimport { deleteTaskById } from 'redux/workplace/workplace-operation';\n\nconst Card = ({\n  _id: id,\n  title,\n  description,\n  labelColor: priority,\n  deadLine,\n  index,\n}) => {\n  const [currentPriority, setCurrentPriority] = useState(priority);\n  const currentTheme = useSelector(selectCurrentTheme);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setCurrentPriority(priority);\n  }, [priority]);\n  const date = new Date(deadLine);\n\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n\n  const today = new Date();\n  const isTodayDeadline = date.toDateString() === today.toDateString();\n\n  return (\n    <Draggable key={id} draggableId={id} index={index}>\n      {provided => (\n        <li\n          className={`cardWrapper theme-${currentTheme}  priorityClass-${currentPriority}`}\n          priority={priority}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <div>\n            <h2 className={`cardTitle theme-${currentTheme}`}>{title}</h2>\n            <p className={`cardDescriptionWrapper theme-${currentTheme}`}>\n              <EllipsisText\n                className={`cardDescription theme-${currentTheme}`}\n                text={description}\n                length={100}\n              />\n            </p>\n            <hr className={`cardLine theme-${currentTheme}`} />\n            <div className={`topWrapper theme-${currentTheme}`}>\n              <div className={`cardPriority theme-${currentTheme}`}>\n                <div>\n                  <h3 className={`cardSubtitle theme-${currentTheme}`}>\n                    Priority\n                  </h3>\n                  <p className={`cardSubtextPrimary theme-${currentTheme}`}>\n                    <span\n                      className={`cardBellPrimary theme-${currentTheme} priorityClass-${currentPriority}`}\n                      priority={priority}\n                    />\n                    {priority}\n                  </p>\n                </div>\n                <div>\n                  <h3 className={`cardSubtitle theme-${currentTheme}`}>\n                    Deadline\n                  </h3>\n                  <p className={`cardSubtextDeadline theme-${currentTheme}`}>\n                    {`${day}/${month}/${year}`}\n                  </p>\n                </div>\n              </div>\n              <div className={`IconWrapper theme-${currentTheme}`}>\n                {isTodayDeadline && (\n                  <span\n                    className={`cardBellIcon theme-${currentTheme}`}\n                    aria-label=\"High priority\"\n                  >\n                    <Icon id={'bell'} width={16} height={16} />\n                  </span>\n                )}\n\n                <PopUp\n                  data={\n                    <div className={`cardIcon theme-${currentTheme}`}>\n                      <Icon id={'pencil'} width={16} height={16} />\n                    </div>\n                  }\n                  ariaLabel={'Edit task'}\n                >\n                  <AddCardForm\n                    taskId={id}\n                    data={{\n                      title,\n                      description,\n                      labelColor: priority,\n                      deadLine,\n                    }}\n                  />\n                </PopUp>\n\n                <button\n                  type=\"button\"\n                  onClick={() => dispatch(deleteTaskById(id))}\n                  className={`cardIcon theme-${currentTheme}`}\n                  aria-label=\"Delete task\"\n                >\n                  <Icon\n                    className={`cardIcon theme-${currentTheme}`}\n                    id={'trash'}\n                    width={16}\n                    height={16}\n                  />\n                </button>\n              </div>\n            </div>\n          </div>\n        </li>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Card;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { toast } from 'react-toastify';\nimport { selectCurrentTheme } from 'redux/auth/auth-slice';\nimport { selectColumns } from 'redux/workplace/workplace-slice';\nimport { deleteColumnById } from 'redux/workplace/workplace-operation';\nimport { filterState } from 'redux/filter/filterSlice';\nimport PopUp from 'components/modal/PopUp';\nimport ColumnForm from 'components/columnForm/ColumnForm';\nimport AddCardForm from 'components/addCardForm/AddCardForm';\nimport Card from 'components/card/Card';\nimport Icon from 'components/icon/Icon';\n\nimport './Columns.scss';\n\nconst Columns = ({ _id: id, name }) => {\n  const dispatch = useDispatch();\n  const currentTheme = useSelector(selectCurrentTheme);\n  const columnsList = useSelector(selectColumns);\n  const filter = useSelector(filterState);\n\n  const cards =\n    columnsList[columnsList.findIndex(item => item._id === id)].tasks;\n\n  const handleDeleteButton = columnId => {\n    if (cards.length !== 0) {\n      toast.error('The column must be empty');\n      return;\n    }\n    dispatch(deleteColumnById(columnId));\n  };\n\n  const getFilteredCards = () => {\n    if (filter === 'all') {\n      return cards;\n    }\n    return cards.filter(({ labelColor }) => labelColor.includes(filter));\n  };\n  const filteredCards = getFilteredCards();\n\n  return (\n    <li className={`column theme-${currentTheme}`}>\n      <div className={`column_header theme-${currentTheme}`}>\n        <h2 className={`column_headerTitle theme-${currentTheme}`}>{name}</h2>\n\n        <div className={`column_buttonWrap theme-${currentTheme}`}>\n          <PopUp\n            data={\n              <span className={`column_buttonIcon theme-${currentTheme}`}>\n                <Icon id=\"pencil\" width=\"16\" height=\"16\" />\n              </span>\n            }\n            ariaLabel={'Edit column'}\n          >\n            <ColumnForm title={name} id={id} />\n          </PopUp>\n          <button\n            className={`column_buttonBox theme-${currentTheme}`}\n            onClick={() => handleDeleteButton(id)}\n            aria-label=\"Delete column\"\n          >\n            <span className={`column_buttonIcon theme-${currentTheme}`}>\n              <Icon id=\"trash\" width=\"16\" height=\"16\" />\n            </span>\n          </button>\n        </div>\n      </div>\n      <Droppable droppableId={id} key={id}>\n        {provided => (\n          <ul\n            className={`cardsWrap theme-${currentTheme}`}\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n          >\n            {filteredCards.map((card, index) => (\n              <Card\n                {...{ ...card, taskId: card._id }}\n                index={index}\n                key={card._id}\n              />\n            ))}\n            {provided.placeholder}\n          </ul>\n        )}\n      </Droppable>\n      <PopUp\n        data={\n          <span className={`column_buttonAdd theme-${currentTheme}`}>\n            <span className={`column_buttonAddIcon theme-${currentTheme}`}>\n              <Icon id=\"plus\" width=\"14\" height=\"14\" />\n            </span>\n            Add another card\n          </span>\n        }\n        ariaLabel={'Add card'}\n      >\n        <AddCardForm columnId={id} />\n      </PopUp>\n    </li>\n  );\n};\nexport default Columns;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectCurrentTheme } from 'redux/auth/auth-slice';\nimport { filterState, changeFilter } from 'redux/filter/filterSlice';\n\nimport './FilterPopup.scss';\n\nconst FilterPopup = () => {\n  const dispatch = useDispatch();\n  const currentTheme = useSelector(selectCurrentTheme);\n  const filter = useSelector(filterState);\n\n  const handleFilter = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  useEffect(() => {\n    const element = document.querySelector(`[value=${filter}]`);\n    element.setAttribute('checked', true);\n  }, [filter]);\n  return (\n    <div className={`theme-${currentTheme} filterPopup`}>\n      <h2 className={`filterPopup_header theme-${currentTheme}`}>Filters</h2>\n      <form className={`filterPopup_radioButtons theme-${currentTheme}`}>\n        <div className={`filterPopup_lineDiv theme-${currentTheme}`}>\n          <h3 className={`filterPopup_title theme-${currentTheme}`}>\n            Label color\n          </h3>\n          <label className={`filterPopup_showAllBtn theme-${currentTheme}`}>\n            <input\n              className={`filterPopup_showAllBtnInput`}\n              type=\"radio\"\n              value=\"all\"\n              name=\"priority\"\n              onChange={handleFilter}\n            />\n            Show all\n          </label>\n        </div>\n\n        <label className={`filterPopup_label theme-${currentTheme}`}>\n          <input\n            type=\"radio\"\n            value=\"without\"\n            name=\"priority\"\n            onChange={handleFilter}\n          />\n          <span className={`filterPopup_without grey`}></span>\n          <span>Without priority</span>\n        </label>\n        <label className={`filterPopup_label theme-${currentTheme}`}>\n          <input\n            type=\"radio\"\n            value=\"low\"\n            name=\"priority\"\n            onChange={handleFilter}\n          />\n          <span className={`filterPopup_without blue`}></span>\n          <span> Low</span>\n        </label>\n        <label className={`filterPopup_label theme-${currentTheme}`}>\n          <input\n            type=\"radio\"\n            value=\"medium\"\n            name=\"priority\"\n            onChange={handleFilter}\n          />\n          <span className={`filterPopup_without pink`}></span>\n          <span> Medium</span>\n        </label>\n        <label className={`filterPopup_label theme-${currentTheme}`}>\n          <input\n            type=\"radio\"\n            value=\"high\"\n            name=\"priority\"\n            onChange={handleFilter}\n          />\n          <span className={`filterPopup_without green`}></span>\n          <span>High</span>\n        </label>\n      </form>\n    </div>\n  );\n};\nexport default FilterPopup;\n","import bg2d from './desktop/bg-2.1x.jpg';\nimport bg3d from './desktop/bg-3.1x.jpg';\nimport bg4d from './desktop/bg-4.1x.jpg';\nimport bg5d from './desktop/bg-5.1x.jpg';\nimport bg6d from './desktop/bg-6.1x.jpg';\nimport bg7d from './desktop/bg-7.1x.jpg';\nimport bg8d from './desktop/bg-8.1x.jpg';\nimport bg9d from './desktop/bg-9.1x.jpg';\nimport bg10d from './desktop/bg-10.1x.jpg';\nimport bg11d from './desktop/bg-11.1x.jpg';\nimport bg12d from './desktop/bg-12.1x.jpg';\nimport bg13d from './desktop/bg-13.1x.jpg';\nimport bg14d from './desktop/bg-14.1x.jpg';\nimport bg15d from './desktop/bg-15.1x.jpg';\nimport bg16d from './desktop/bg-16.1x.jpg';\n\nimport bg2t from './tablet/bg-2.1x.jpg';\nimport bg3t from './tablet/bg-3.1x.jpg';\nimport bg4t from './tablet/bg-4.1x.jpg';\nimport bg5t from './tablet/bg-5.1x.jpg';\nimport bg6t from './tablet/bg-6.1x.jpg';\nimport bg7t from './tablet/bg-7.1x.jpg';\nimport bg8t from './tablet/bg-8.1x.jpg';\nimport bg9t from './tablet/bg-9.1x.jpg';\nimport bg10t from './tablet/bg-10.1x.jpg';\nimport bg11t from './tablet/bg-11.1x.jpg';\nimport bg12t from './tablet/bg-12.1x.jpg';\nimport bg13t from './tablet/bg-13.1x.jpg';\nimport bg14t from './tablet/bg-14.1x.jpg';\nimport bg15t from './tablet/bg-15.1x.jpg';\nimport bg16t from './tablet/bg-16.1x.jpg';\n\nimport bg2m from './mobile/bg-2.1x.jpg';\nimport bg3m from './mobile/bg-3.1x.jpg';\nimport bg4m from './mobile/bg-4.1x.jpg';\nimport bg5m from './mobile/bg-5.1x.jpg';\nimport bg6m from './mobile/bg-6.1x.jpg';\nimport bg7m from './mobile/bg-7.1x.jpg';\nimport bg8m from './mobile/bg-8.1x.jpg';\nimport bg9m from './mobile/bg-9.1x.jpg';\nimport bg10m from './mobile/bg-10.1x.jpg';\nimport bg11m from './mobile/bg-11.1x.jpg';\nimport bg12m from './mobile/bg-12.1x.jpg';\nimport bg13m from './mobile/bg-13.1x.jpg';\nimport bg14m from './mobile/bg-14.1x.jpg';\nimport bg15m from './mobile/bg-15.1x.jpg';\nimport bg16m from './mobile/bg-16.1x.jpg';\n\nimport bg2dRet from './desktop/bg-2.2x.jpg';\nimport bg3dRet from './desktop/bg-3.2x.jpg';\nimport bg4dRet from './desktop/bg-4.2x.jpg';\nimport bg5dRet from './desktop/bg-5.2x.jpg';\nimport bg6dRet from './desktop/bg-6.2x.jpg';\nimport bg7dRet from './desktop/bg-7.2x.jpg';\nimport bg8dRet from './desktop/bg-8.2x.jpg';\nimport bg9dRet from './desktop/bg-9.2x.jpg';\nimport bg10dRet from './desktop/bg-10.2x.jpg';\nimport bg11dRet from './desktop/bg-11.2x.jpg';\nimport bg12dRet from './desktop/bg-12.2x.jpg';\nimport bg13dRet from './desktop/bg-13.2x.jpg';\nimport bg14dRet from './desktop/bg-14.2x.jpg';\nimport bg15dRet from './desktop/bg-15.2x.jpg';\nimport bg16dRet from './desktop/bg-16.2x.jpg';\n\nimport bg2tRet from './tablet/bg-2.2x.jpg';\nimport bg3tRet from './tablet/bg-3.2x.jpg';\nimport bg4tRet from './tablet/bg-4.2x.jpg';\nimport bg5tRet from './tablet/bg-5.2x.jpg';\nimport bg6tRet from './tablet/bg-6.2x.jpg';\nimport bg7tRet from './tablet/bg-7.2x.jpg';\nimport bg8tRet from './tablet/bg-8.2x.jpg';\nimport bg9tRet from './tablet/bg-9.2x.jpg';\nimport bg10tRet from './tablet/bg-10.2x.jpg';\nimport bg11tRet from './tablet/bg-11.2x.jpg';\nimport bg12tRet from './tablet/bg-12.2x.jpg';\nimport bg13tRet from './tablet/bg-13.2x.jpg';\nimport bg14tRet from './tablet/bg-14.2x.jpg';\nimport bg15tRet from './tablet/bg-15.2x.jpg';\nimport bg16tRet from './tablet/bg-16.2x.jpg';\n\nimport bg2mRet from './mobile/bg-2.2x.jpg';\nimport bg3mRet from './mobile/bg-3.2x.jpg';\nimport bg4mRet from './mobile/bg-4.2x.jpg';\nimport bg5mRet from './mobile/bg-5.2x.jpg';\nimport bg6mRet from './mobile/bg-6.2x.jpg';\nimport bg7mRet from './mobile/bg-7.2x.jpg';\nimport bg8mRet from './mobile/bg-8.2x.jpg';\nimport bg9mRet from './mobile/bg-9.2x.jpg';\nimport bg10mRet from './mobile/bg-10.2x.jpg';\nimport bg11mRet from './mobile/bg-11.2x.jpg';\nimport bg12mRet from './mobile/bg-12.2x.jpg';\nimport bg13mRet from './mobile/bg-13.2x.jpg';\nimport bg14mRet from './mobile/bg-14.2x.jpg';\nimport bg15mRet from './mobile/bg-15.2x.jpg';\nimport bg16mRet from './mobile/bg-16.2x.jpg';\n\nexport const bcgArray = [\n  {\n    bgname: 'bg-1',\n    id: '1',\n    source: {\n      mobile: '',\n      tablet: '',\n      desktop: '',\n    },\n  },\n  {\n    bgname: 'bg-2',\n    id: '2',\n    source: {\n      mobile: bg2m,\n      tablet: bg2t,\n      desktop: bg2d,\n      mobileRet: bg2mRet,\n      tabletRet: bg2tRet,\n      desktopRet: bg2dRet,\n    },\n  },\n  {\n    bgname: 'bg-3',\n    id: '3',\n    source: {\n      mobile: bg3m,\n      tablet: bg3t,\n      desktop: bg3d,\n      mobileRet: bg3mRet,\n      tabletRet: bg3tRet,\n      desktopRet: bg3dRet,\n    },\n  },\n  {\n    bgname: 'bg-4',\n    id: '4',\n    source: {\n      mobile: bg4m,\n      tablet: bg4t,\n      desktop: bg4d,\n      mobileRet: bg4mRet,\n      tabletRet: bg4tRet,\n      desktopRet: bg4dRet,\n    },\n  },\n  {\n    bgname: 'bg-5',\n    id: '5',\n    source: {\n      mobile: bg5m,\n      tablet: bg5t,\n      desktop: bg5d,\n      mobileRet: bg5mRet,\n      tabletRet: bg5tRet,\n      desktopRet: bg5dRet,\n    },\n  },\n  {\n    bgname: 'bg-6',\n    id: '6',\n    source: {\n      mobile: bg6m,\n      tablet: bg6t,\n      desktop: bg6d,\n      mobileRet: bg6mRet,\n      tabletRet: bg6tRet,\n      desktopRet: bg6dRet,\n    },\n  },\n  {\n    bgname: 'bg-7',\n    id: '7',\n    source: {\n      mobile: bg7m,\n      tablet: bg7t,\n      desktop: bg7d,\n      mobileRet: bg7mRet,\n      tabletRet: bg7tRet,\n      desktopRet: bg7dRet,\n    },\n  },\n  {\n    bgname: 'bg-8',\n    id: '8',\n    source: {\n      mobile: bg8m,\n      tablet: bg8t,\n      desktop: bg8d,\n      mobileRet: bg8mRet,\n      tabletRet: bg8tRet,\n      desktopRet: bg8dRet,\n    },\n  },\n  {\n    bgname: 'bg-9',\n    id: '9',\n    source: {\n      mobile: bg9m,\n      tablet: bg9t,\n      desktop: bg9d,\n      mobileRet: bg9mRet,\n      tabletRet: bg9tRet,\n      desktopRet: bg9dRet,\n    },\n  },\n  {\n    bgname: 'bg-10',\n    id: '10',\n    source: {\n      mobile: bg10m,\n      tablet: bg10t,\n      desktop: bg10d,\n      mobileRet: bg10mRet,\n      tabletRet: bg10tRet,\n      desktopRet: bg10dRet,\n    },\n  },\n  {\n    bgname: 'bg-11',\n    id: '11',\n    source: {\n      mobile: bg11m,\n      tablet: bg11t,\n      desktop: bg11d,\n      mobileRet: bg11mRet,\n      tabletRet: bg11tRet,\n      desktopRet: bg11dRet,\n    },\n  },\n  {\n    bgname: 'bg-12',\n    id: '12',\n    source: {\n      mobile: bg12m,\n      tablet: bg12t,\n      desktop: bg12d,\n      mobileRet: bg12mRet,\n      tabletRet: bg12tRet,\n      desktopRet: bg12dRet,\n    },\n  },\n  {\n    bgname: 'bg-13',\n    id: '13',\n    source: {\n      mobile: bg13m,\n      tablet: bg13t,\n      desktop: bg13d,\n      mobileRet: bg13mRet,\n      tabletRet: bg13tRet,\n      desktopRet: bg13dRet,\n    },\n  },\n  {\n    bgname: 'bg-14',\n    id: '14',\n    source: {\n      mobile: bg14m,\n      tablet: bg14t,\n      desktop: bg14d,\n      mobileRet: bg14mRet,\n      tabletRet: bg14tRet,\n      desktopRet: bg14dRet,\n    },\n  },\n  {\n    bgname: 'bg-15',\n    id: '15',\n    source: {\n      mobile: bg15m,\n      tablet: bg15t,\n      desktop: bg15d,\n      mobileRet: bg15mRet,\n      tabletRet: bg15tRet,\n      desktopRet: bg15dRet,\n    },\n  },\n  {\n    bgname: 'bg-16',\n    id: '16',\n    source: {\n      mobile: bg16m,\n      tablet: bg16t,\n      desktop: bg16d,\n      mobileRet: bg16mRet,\n      tabletRet: bg16tRet,\n      desktopRet: bg16dRet,\n    },\n  },\n];\n","import styled from '@emotion/styled';\n\nexport const BoardContainer = styled.section`\n  /* width: 100%; */\n  /* height: calc(100vh - 68px); */\n  width: auto;\n  height: auto;\n  flex-wrap: nowrap;\n  background-origin: border-box;\n  background-repeat: no-repeat;\n  background-size: cover;\n  overflow: hidden;\n  @media screen and (min-width: 768px) {\n    @media only screen and (-webkit-min-device-pixel-ratio: 2),\n      only screen and (min--moz-device-pixel-ratio: 2),\n      only screen and (-o-min-device-pixel-ratio: 2/1),\n      only screen and (min-resolution: 192dpi),\n      only screen and (min-resolution: 2dppx) {\n      background-image: url(${props => props.backgroundImg.source.tabletRet});\n    }\n    background-image: url(${props => props.backgroundImg.source.tablet});\n  }\n  @media screen and (min-width: 1440px) {\n    @media only screen and (-webkit-min-device-pixel-ratio: 2),\n      only screen and (min--moz-device-pixel-ratio: 2),\n      only screen and (-o-min-device-pixel-ratio: 2/1),\n      only screen and (min-resolution: 192dpi),\n      only screen and (min-resolution: 2dppx) {\n      background-image: url(${props => props.backgroundImg.source.desktopRet});\n    }\n    background-image: url(${props => props.backgroundImg.source.desktop});\n  }\n\n  @media screen and (max-width: 767px) {\n    height: calc(100vh - 60px);\n    @media only screen and (-webkit-min-device-pixel-ratio: 2),\n      only screen and (min--moz-device-pixel-ratio: 2),\n      only screen and (-o-min-device-pixel-ratio: 2/1),\n      only screen and (min-resolution: 192dpi),\n      only screen and (min-resolution: 2dppx) {\n      background-image: url(${props => props.backgroundImg.source.mobileRet});\n    }\n    background-image: url(${props => props.backgroundImg.source.mobile});\n  }\n`;\n//\n","import './screensPage.scss';\nimport PopUp from 'components/modal/PopUp';\nimport Columns from '../columns/Columns';\nimport Icon from '../icon/Icon';\nimport FilterPopup from 'components/filterPopup/FilterPopup';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { selectCurrentTheme, selectIsLoggedIn } from 'redux/auth/auth-slice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ColumnForm from 'components/columnForm/ColumnForm';\nimport { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n  selectColumns,\n  setColumn,\n  selectCurrentBoard,\n  selectAllBoards,\n} from 'redux/workplace/workplace-slice';\nimport {\n  dragTaskById,\n  getBoardById,\n} from 'redux/workplace/workplace-operation';\nimport { bcgArray } from 'images/bcgArrey';\nimport { BoardContainer } from './ScreensPage.styled';\nimport { toast } from 'react-toastify';\n\nconst ScreensPage = () => {\n  const currentTheme = useSelector(selectCurrentTheme);\n  const dispatch = useDispatch();\n  const columnsArray = useSelector(selectColumns);\n  const currentBoard = useSelector(selectCurrentBoard);\n  const { boardName } = useParams();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const allBoards = useSelector(selectAllBoards);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(getBoardById(boardName));\n    }\n  }, [boardName, dispatch, isLoggedIn]);\n\n  useEffect(() => {\n    if (allBoards.length > 0) {\n      const isBoard = allBoards.findIndex(item => {\n        return item._id === boardName;\n      });\n      if (isBoard === -1) {\n        toast.error('There is no such board.');\n        navigate('/');\n      }\n    }\n  }, [allBoards, boardName, navigate]);\n\n  const bcgImg = () => {\n    if (currentBoard.background) {\n      const result = bcgArray.find(\n        bcg => bcg.bgname === currentBoard.background\n      );\n\n      return result;\n    }\n  };\n\n  const dragHandler = async res => {\n    if (!res.destination) {\n      return;\n    }\n    const sourceListIndex = columnsArray.findIndex(\n      el => el._id === res.source.droppableId\n    );\n    const destinationListIndex = columnsArray.findIndex(\n      el => el._id === res.destination.droppableId\n    );\n\n    const updatedSourceTasks = [...columnsArray[sourceListIndex].tasks];\n    const updatedDestinationTasks = [\n      ...columnsArray[destinationListIndex].tasks,\n    ];\n\n    const [movedTask] = updatedSourceTasks.splice(res.source.index, 1);\n\n    if (sourceListIndex === destinationListIndex) {\n      updatedSourceTasks.splice(res.destination.index, 0, movedTask);\n    } else {\n      updatedDestinationTasks.splice(res.destination.index, 0, movedTask);\n    }\n\n    const updatedData = [...columnsArray];\n    updatedData[sourceListIndex] = {\n      ...updatedData[sourceListIndex],\n      tasks: updatedSourceTasks,\n    };\n    if (sourceListIndex !== destinationListIndex) {\n      updatedData[destinationListIndex] = {\n        ...updatedData[destinationListIndex],\n        tasks: updatedDestinationTasks,\n      };\n    }\n\n    dispatch(setColumn(updatedData));\n\n    dispatch(\n      dragTaskById({\n        id: movedTask._id,\n        columnId: res.destination.droppableId,\n        indexTo: res.destination.index,\n        indexFrom: res.source.index,\n      })\n    );\n  };\n\n  return (\n    <>\n      {bcgImg() && (\n        <BoardContainer backgroundImg={bcgImg()}>\n          <div className={`theme-${currentTheme} screenPage`}>\n            <div className={`screenPage_header theme-${currentTheme}`}>\n              <h1 className={`screenPage_title theme-${currentTheme}`}>\n                {currentBoard.name}\n              </h1>\n              <PopUp\n                data={\n                  <span className={`screenPage_filter theme-${currentTheme}`}>\n                    <Icon id={'filter'} width={16} height={16} />\n                    <span\n                      className={`screenPage_filterText theme-${currentTheme}`}\n                    >\n                      Filter\n                    </span>\n                  </span>\n                }\n                ariaLabel={'Filter cards'}\n              >\n                <FilterPopup />\n              </PopUp>\n            </div>\n\n            <div className={`screenPage_canvas theme-${currentTheme}`}>\n              <ul className={`screenPage_columns theme-${currentTheme}`}>\n                <DragDropContext onDragEnd={dragHandler}>\n                  {columnsArray.map(item => (\n                    <Columns {...item} key={item._id} />\n                  ))}\n                </DragDropContext>\n              </ul>\n\n              <PopUp\n                data={\n                  <span\n                    className={`screenPage_addButton theme-${currentTheme}`}\n                  >\n                    <span\n                      className={`screenPage_addButtonPlus theme-${currentTheme}`}\n                    >\n                      <Icon id={'plus'} width={14} height={14} />\n                    </span>\n                    <span\n                      className={`screenPage_addButtonText theme-${currentTheme}`}\n                    >\n                      Add another column\n                    </span>\n                  </span>\n                }\n                ariaLabel={'Add column'}\n              >\n                <ColumnForm />\n              </PopUp>\n            </div>\n          </div>\n        </BoardContainer>\n      )}\n    </>\n  );\n};\n\nexport default ScreensPage;\n","import React from 'react';\nimport Modal from 'react-modal';\nimport Icon from 'components/icon/Icon';\nimport { selectCurrentTheme } from 'redux/auth/auth-slice';\nimport { useSelector } from 'react-redux';\nimport './popup.scss';\n\nModal.setAppElement('#root');\n\nconst PopUp = props => {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const { children, data, ariaLabel } = props;\n  const currentTheme = useSelector(selectCurrentTheme);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // something after modal open\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function cloneChildren(child) {\n    return React.cloneElement(child, {\n      closeModal,\n    });\n  }\n\n  return (\n    <>\n      <button\n        className={`open-modal-button theme-${currentTheme}`}\n        onClick={openModal}\n        aria-label={`${ariaLabel}`}\n      >\n        {data}\n      </button>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        className={`modal theme-${currentTheme}`}\n        overlayClassName={`modal-overlay theme-${currentTheme}`}\n        contentLabel=\"modal\"\n      >\n        <button\n          className={`close-modal-button theme-${currentTheme}`}\n          onClick={closeModal}\n          aria-label=\"Close modal\"\n        >\n          <Icon id=\"x-close\" width={18} height={18} />\n        </button>\n        {cloneChildren(children)}\n      </Modal>\n    </>\n  );\n};\n\nexport default PopUp;\n"],"names":["props","title","id","closeModal","theme","useSelector","selectCurrentTheme","useState","error","setError","columnName","setColumnName","boardName","useParams","dispatch","useDispatch","className","onSubmit","e","InputTitle","target","elements","value","trim","preventDefault","editColumnById","name","addNewColumn","idBoard","newColumn","type","placeholder","required","minLength","maxLength","onChange","Icon","width","height","selected","onSelect","currentTheme","ExampleCustomInput","forwardRef","ref","_","date","onClick","isToday","format","minDate","Date","calendarStartDay","customInput","calendarClassName","columnId","taskId","data","description","labelColor","deadLine","normalizedDeadLine","schema","yup","shape","max","min","initialValues","_id","validationSchema","validate","values","errors","setSubmitting","editTaskById","console","log","addNewTask","touched","handleChange","handleBlur","handleSubmit","isSubmitting","setFieldValue","onBlur","rows","desc","role","disabled","priority","index","currentPriority","setCurrentPriority","useEffect","year","getFullYear","month","String","getMonth","padStart","day","getDate","today","isTodayDeadline","toDateString","draggableId","provided","innerRef","draggableProps","dragHandleProps","text","length","PopUp","ariaLabel","deleteTaskById","columnsList","selectColumns","filter","filterState","cards","findIndex","item","tasks","filteredCards","includes","deleteColumnById","toast","droppableId","droppableProps","map","card","key","handleFilter","changeFilter","document","querySelector","setAttribute","bcgArray","bgname","source","mobile","tablet","desktop","bg2m","bg2t","bg2d","mobileRet","tabletRet","bg2tRet","desktopRet","bg2dRet","bg3m","bg3t","bg3d","bg3tRet","bg3dRet","bg4m","bg4t","bg4d","bg4tRet","bg4dRet","bg5d","bg5tRet","bg5dRet","bg6m","bg6t","bg6d","bg6tRet","bg6dRet","bg7t","bg7d","bg7tRet","bg7dRet","bg8m","bg8t","bg8d","bg8tRet","bg8dRet","bg9t","bg9d","bg9tRet","bg9dRet","bg10m","bg10t","bg10d","bg10tRet","bg10dRet","bg11m","bg11t","bg11d","bg11tRet","bg11dRet","bg12m","bg12t","bg12d","bg12tRet","bg12dRet","bg13m","bg13t","bg13d","bg13tRet","bg13dRet","bg14m","bg14t","bg14d","bg14tRet","bg14dRet","bg15m","bg15t","bg15d","bg15tRet","bg15dRet","bg16m","bg16t","bg16d","bg16tRet","bg16dRet","BoardContainer","styled","backgroundImg","columnsArray","currentBoard","selectCurrentBoard","isLoggedIn","selectIsLoggedIn","allBoards","selectAllBoards","navigate","useNavigate","getBoardById","bcgImg","background","find","bcg","dragHandler","res","destination","sourceListIndex","el","destinationListIndex","updatedSourceTasks","updatedDestinationTasks","splice","movedTask","updatedData","setColumn","dragTaskById","indexTo","indexFrom","onDragEnd","Modal","child","React","modalIsOpen","setIsOpen","children","isOpen","onAfterOpen","onRequestClose","overlayClassName","contentLabel"],"sourceRoot":""}
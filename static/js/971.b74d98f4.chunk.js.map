{"version":3,"file":"static/js/971.b74d98f4.chunk.js","mappings":"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","sources":["components/columnForm/ColumnForm.jsx","components/calendar/DatePicker.jsx","components/addCardForm/AddCardForm.jsx","components/card/Card.jsx","components/columns/Columns.jsx","components/filterPopup/FilterPopup.jsx","components/ScreensPage/ScreensPage.jsx","components/modal/PopUp.jsx"],"sourcesContent":["import { selectCurrentTheme } from 'redux/auth/auth-slice';\n\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport Icon from 'components/icon/Icon';\nimport './columnForm.scss';\nimport { useParams } from 'react-router';\nimport { addNewColumn } from 'redux/workplace/workplace-operation';\nimport { editColumnById } from 'redux/workplace/workplace-operation';\nimport { useDispatch } from 'react-redux';\n\nconst ColumnForm = props => {\n  // const dispatch = useDispatch();\n  const { title, id, closeModal } = props;\n  const theme = useSelector(selectCurrentTheme);\n  const [error, setError] = useState('');\n  const [columnName, setColumnName] = useState(title || '');\n  const { boardName } = useParams();\n  const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    const InputTitle = e.target.elements.title.value;\n    e.preventDefault();\n\n    if (InputTitle === '') {\n      setError('Required');\n      return;\n    } else if (title && id) {\n      if (InputTitle === title) {\n        closeModal();\n        return;\n      }\n      dispatch(\n        editColumnById({\n          name: InputTitle,\n          id: id,\n        })\n      );\n      closeModal();\n    } else {\n      dispatch(addNewColumn({ idBoard: boardName, newColumn: InputTitle }));\n      closeModal();\n\n      return;\n    }\n    closeModal();\n  };\n\n  return (\n    <form className=\"columnForm\" onSubmit={onSubmit}>\n      <p className={`columnTitle theme-${theme}`}>\n        {!title ? 'Add' : 'Edit'} column\n      </p>\n      <div className=\"columnInputWrapper\">\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          className={`titleInput theme-${theme}`}\n          value={columnName}\n          onChange={e => setColumnName(e.target.value)}\n        />\n        {error && <p className={`errorMessage theme-${theme}`}>{error}</p>}\n      </div>\n      <button className={`columnButton theme-${theme}`} type=\"submit\">\n        <span className={`columnIcon theme-${theme}`}>\n          <Icon id={'plus'} width={14} height={14} />\n        </span>\n        {!title ? 'Add' : 'Edit'}\n      </button>\n    </form>\n  );\n};\n\nexport default ColumnForm;\n","import React from 'react';\nimport { useState, forwardRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { format, isToday } from 'date-fns';\nimport { selectCurrentTheme } from 'redux/auth/auth-slice';\nimport DatePicker from 'react-datepicker';\nimport './datePicker.scss';\nimport Icon from 'components/icon/Icon';\n// import 'react-datepicker/dist/react-datepicker.css';\n\nconst DateCalendar = ({ getDeadline }) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const currentTheme = useSelector(selectCurrentTheme);\n\n  const onChange = date => {\n    getDeadline(date);\n    setStartDate(date);\n  };\n\n  const formatDate = date => {\n    if (isToday(date)) {\n      return `Today, ${format(date, 'MMMM d')}`;\n    }\n    return format(date, 'EEEE, MMMM d');\n  };\n\n  const ExampleCustomInput = forwardRef(({ _, onClick }, ref) => (\n    <button\n      type=\"button\"\n      className={`button-custom-input theme-${currentTheme}`}\n      onClick={onClick}\n      ref={ref}\n    >\n      <span className=\"input-custom-text\">{formatDate(startDate)}</span>\n      <Icon id={'chevron-down'} width={18} height={18} />\n    </button>\n  ));\n  return (\n    <div>\n      <DatePicker\n        selected={startDate}\n        onChange={onChange}\n        minDate={new Date()}\n        calendarStartDay={1}\n        customInput={<ExampleCustomInput />}\n        calendarClassName={`theme-${currentTheme}`}\n        // popperPlacement='right-end'\n      />\n    </div>\n  );\n};\n\nexport default DateCalendar;\n","// import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCurrentTheme } from 'redux/auth/auth-slice';\nimport { Formik } from 'formik';\nimport { Field } from 'formik';\nimport Icon from 'components/icon/Icon';\nimport DateCalendar from 'components/calendar/DatePicker';\nimport './addCardForm.scss';\nimport { addNewTask, editTaskById } from 'redux/workplace/workplace-operation';\n\nconst AddCardForm = ({\n  columnId = null,\n  taskId = null,\n  closeModal,\n  data: { title, description, labelColor, deadLine } = {},\n}) => {\n  // const [date, setDate] = useState('');\n  // const getDeadline = value => {\n  //   setDate(value);\n  //   console.log(date);\n  // };\n  const date = '2023-08-03T17:01:27.257+00:00';\n  const theme = useSelector(selectCurrentTheme);\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        columnId,\n        _id: taskId,\n        description: description,\n        title: title || '',\n        labelColor: labelColor || 'without',\n        deadLine: date,\n      }}\n      validate={values => {\n        const errors = {};\n        if (!values.title) {\n          errors.title = 'Required';\n        }\n        if (!values.description) {\n          errors.description = 'Required';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        if (!columnId && taskId) {\n          //Робимо PATCH запит при сабміті\n          // console.log('Updating a card');\n          dispatch(editTaskById(values));\n          setSubmitting(false);\n          closeModal();\n        } else if (!taskId && columnId) {\n          //Робимо POST запит при сабміті\n          // console.log('Creating a new card');\n          dispatch(addNewTask(values));\n          setSubmitting(false);\n          closeModal();\n        } else {\n          console.log('Oops! Something went wrong :(');\n          return;\n        }\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n      }) => (\n        <form className={`add-form theme-${theme}`} onSubmit={handleSubmit}>\n          <p className={`add-form-title theme-${theme}`}>\n            {columnId && taskId ? 'Edit card' : 'Add card'}\n          </p>\n          <div className=\"add-form-wrap\">\n            <div className=\"add-form-email-wrap\">\n              <input\n                className={`add-form-input email theme-${theme}`}\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.title}\n              />\n              <p className={`add-form-input-error theme-${theme}`}>\n                {errors.title && touched.title && errors.title}\n              </p>\n            </div>\n            <div className=\"add-form-desc-wrap\">\n              <textarea\n                className={`add-form-input desc theme-${theme}`}\n                rows={7}\n                name=\"description\"\n                placeholder=\"Description\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.description}\n              />\n              <p className={`add-form-input-error theme-${theme}`}>\n                {errors.desc && touched.desc && errors.desc}\n              </p>\n            </div>\n            <div>\n              <div>\n                <p className={`add-form-group-title theme-${theme}`}>\n                  Label color\n                </p>\n                <div\n                  className=\"add-form-radio-group\"\n                  role=\"group\"\n                  aria-labelledby=\"labelColor-group\"\n                >\n                  <label className=\"add-form-radio low\">\n                    <Field\n                      className=\"visually-hidden\"\n                      type=\"radio\"\n                      name=\"labelColor\"\n                      value=\"low\"\n                    />\n                    <span className=\"outer-circle\"></span>\n                    <span className=\"inner-circle\"></span>\n                  </label>\n                  <label className=\"add-form-radio medium\">\n                    <Field\n                      className=\"visually-hidden\"\n                      type=\"radio\"\n                      name=\"labelColor\"\n                      value=\"medium\"\n                    />\n                    <span className=\"outer-circle\"></span>\n                    <span className=\"inner-circle\"></span>\n                  </label>\n                  <label className=\"add-form-radio high\">\n                    <Field\n                      className=\"visually-hidden\"\n                      type=\"radio\"\n                      name=\"labelColor\"\n                      value=\"high\"\n                    />\n                    <span className=\"outer-circle\"></span>\n                    <span className=\"inner-circle\"></span>\n                  </label>\n                  <label className=\"add-form-radio without\">\n                    <Field\n                      className=\"visually-hidden\"\n                      type=\"radio\"\n                      name=\"labelColor\"\n                      value=\"without\"\n                    />\n                    <span className={`outer-circle theme-${theme}`}></span>\n                    <span className={`inner-circle theme-${theme}`}></span>\n                  </label>\n                </div>\n              </div>\n            </div>\n            <div className=\"add-form-deadline\">\n              <p className={`add-form-deadline-title theme-${theme}`}>\n                Deadline\n              </p>\n              <DateCalendar\n              // getDeadline={() => {\n              //   getDeadline();\n              // }}\n              />\n            </div>\n            <button\n              className={`add-form-submit theme-${theme}`}\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              <div className={`add-form-icon-wrap theme-${theme}`}>\n                <Icon id=\"plus\" width={14} height={14} />\n              </div>\n              {columnId && taskId ? 'Edit' : 'Add'}\n            </button>\n          </div>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddCardForm;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport EllipsisText from 'react-ellipsis-text';\nimport { selectCurrentTheme } from 'redux/auth/auth-slice';\nimport './Card.scss';\nimport Icon from '../icon/Icon';\nimport PopUp from 'components/modal/PopUp';\nimport AddCardForm from 'components/addCardForm/AddCardForm';\nimport { deleteTaskById } from 'redux/workplace/workplace-operation';\n\nconst Card = ({\n  _id: id,\n  title,\n  description,\n  labelColor: priority,\n  deadLine,\n}) => {\n  const [currentPriority, setCurrentPriority] = useState(priority);\n  const currentTheme = useSelector(selectCurrentTheme);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setCurrentPriority(priority);\n  }, [priority]);\n  const date = new Date(deadLine);\n\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n\n  const convertToDateFormat = dateString => {\n    const parts = dateString.split('/');\n    const day = parseInt(parts[0], 10);\n    const month = parseInt(parts[1], 10) - 1;\n    const year = parseInt(parts[2], 10);\n\n    return new Date(year, month, day);\n  };\n\n  const today = new Date();\n  const formattedDeadline = convertToDateFormat(deadLine);\n  const isToday = today.toDateString() === formattedDeadline.toDateString();\n\n  return (\n    <div\n      className={`cardWrapper theme-${currentTheme}  priorityClass-${currentPriority}`}\n      priority={priority}\n    >\n      <div>\n        <h2 className={`cardTitle theme-${currentTheme}`}>{title}</h2>\n        <p className={`cardDescriptionWrapper theme-${currentTheme}`}>\n          <EllipsisText\n            className={`cardDescription theme-${currentTheme}`}\n            text={description}\n            length={100}\n          />\n        </p>\n        <hr className={`cardLine theme-${currentTheme}`} />\n        <div className={`topWrapper theme-${currentTheme}`}>\n          <div className={`cardPriority theme-${currentTheme}`}>\n            <div>\n              <h3 className={`cardSubtitle theme-${currentTheme}`}>Priority</h3>\n              <p className={`cardSubtextPrimary theme-${currentTheme}`}>\n                <span\n                  className={`cardBellPrimary theme-${currentTheme} priorityClass-${currentPriority}`}\n                  priority={priority}\n                />\n                {priority}\n              </p>\n            </div>\n            <div>\n              <h3 className={`cardSubtitle theme-${currentTheme}`}>Deadline</h3>\n              <p className={`cardSubtextDeadline theme-${currentTheme}`}>\n                {`${day}\\\\${month}\\\\${year}`}\n              </p>\n            </div>\n          </div>\n          <div className={`IconWrapper theme-${currentTheme}`}>\n            {isToday && (\n              <span className={`cardIcon theme-${currentTheme}`}>\n                <Icon id={'bell'} width={16} height={16} />\n              </span>\n            )}\n            <span className={`cardIcon theme-${currentTheme}`}>\n              <Icon id={'arrow-circle-broken-right'} width={16} height={16} />\n            </span>\n            <PopUp\n              data={\n                <span className={`cardIcon theme-${currentTheme}`}>\n                  <Icon id={'pencil'} width={16} height={16} />\n                </span>\n              }\n            >\n              <AddCardForm\n                taskId={id}\n                data={{\n                  title,\n                  description,\n                  labelColor: priority,\n                  deadLine,\n                }}\n              />\n            </PopUp>\n\n            <span\n              type=\"button\"\n              onClick={() => dispatch(deleteTaskById(id))}\n              className={`cardIcon theme-${currentTheme}`}\n            >\n              <Icon\n                className={`cardIcon theme-${currentTheme}`}\n                id={'trash'}\n                width={16}\n                height={16}\n              />\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectCurrentTheme } from 'redux/auth/auth-slice';\nimport { filterState } from 'redux/filter/filterSlice';\nimport Icon from 'components/icon/Icon';\nimport PopUp from 'components/modal/PopUp';\nimport ColumnForm from 'components/columnForm/ColumnForm';\nimport AddCardForm from 'components/addCardForm/AddCardForm';\nimport Card from 'components/card/Card';\nimport './Columns.scss';\nimport { selectColumns } from 'redux/workplace/workplace-slice';\nimport { deleteColumnById } from 'redux/workplace/workplace-operation';\n\n// const description = `Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.`;\n\n// const cards = [\n//   {\n//     id: 1,\n//     title: 'Card 1 Title',\n//     description: description,\n//     priority: 'without',\n//     deadline: '11/09/2023',\n//   },\n//   {\n//     id: 2,\n//     title: 'Card 2 Title',\n//     description: description,\n//     priority: 'low',\n//     deadline: '11/09/2023',\n//   },\n\n//   {\n//     id: 3,\n//     title: 'Card 3 Title',\n//     description: description,\n//     priority: 'medium',\n//     deadline: '11/09/2023',\n//   },\n//   {\n//     id: 4,\n//     title: 'Card 4 Title',\n//     description: description,\n//     priority: 'high',\n//     deadline: '11/09/2023',\n//   },\n//   {\n//     id: 5,\n//     title: 'Card 5 Title',\n//     description: description,\n//     priority: 'without',\n//     deadline: '11/09/2023',\n//   },\n// ];\n\nconst Columns = ({ _id: id, name }) => {\n  const currentTheme = useSelector(selectCurrentTheme);\n\n  const columnsList = useSelector(selectColumns);\n  // console.log('columnsList:', columnsList);\n  const cards =\n    columnsList[columnsList.findIndex(item => item._id === id)].tasks;\n  // console.log('cards:', cards);\n\n  const filter = useSelector(filterState);\n\n  const dispatch = useDispatch();\n\n  const handleDeleteButton = id => {\n    if (cards.length !== 0) {\n      console.log('The column must be empty');\n      return;\n    }\n    console.log(`Column deleted ${id}`);\n    dispatch(deleteColumnById(id));\n  };\n\n  const getFilteredCards = () => {\n    if (filter === 'all') {\n      return cards;\n    }\n    return cards.filter(({ labelColor }) => labelColor.includes(filter));\n  };\n  const filteredCards = getFilteredCards();\n  // console.log('filteredCards:', filteredCards);\n\n  return (\n    <li className={`column theme-${currentTheme}`}>\n      <div className={`column_header theme-${currentTheme}`}>\n        <h2 className={`column_headerTitle theme-${currentTheme}`}>{name}</h2>\n        <div className={`column_buttonWrap theme-${currentTheme}`}>\n          <PopUp\n            data={\n              <span className={`column_buttonIcon theme-${currentTheme}`}>\n                <Icon id=\"pencil\" width=\"16\" height=\"16\" />\n              </span>\n            }\n          >\n            <ColumnForm title={name} id={id} />\n          </PopUp>\n          <button\n            className={`column_buttonBox theme-${currentTheme}`}\n            onClick={() => handleDeleteButton(id)}\n          >\n            <span className={`column_buttonIcon theme-${currentTheme}`}>\n              <Icon id=\"trash\" width=\"16\" height=\"16\" />\n            </span>\n          </button>\n        </div>\n      </div>\n\n      <ul className={`cardsWrap theme-${currentTheme}`}>\n        {filteredCards.map(card => (\n          <Card {...{ ...card, taskId: card._id }} key={card._id} />\n        ))}\n      </ul>\n      <PopUp\n        data={\n          <span className={`column_buttonAdd theme-${currentTheme}`}>\n            <span className={`column_buttonAddIcon theme-${currentTheme}`}>\n              <Icon id=\"plus\" width=\"14\" height=\"14\" />\n            </span>\n            Add another card\n          </span>\n        }\n      >\n        <AddCardForm columnId={id} />\n      </PopUp>\n    </li>\n  );\n};\nexport default Columns;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n// import { themeState } from 'redux/theme/themeSlice';\nimport { selectCurrentTheme } from 'redux/auth/auth-slice';\nimport { filterState, changeFilter } from 'redux/filter/filterSlice';\n\nimport './FilterPopup.scss';\n\nconst FilterPopup = () => {\n  const dispatch = useDispatch();\n  const currentTheme = useSelector(selectCurrentTheme);\n  const filter = useSelector(filterState);\n\n  const handleFilter = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  useEffect(() => {\n    const element = document.querySelector(`[value=${filter}]`);\n    element.setAttribute('checked', true);\n  }, [filter]);\n  return (\n    <div className={`theme-${currentTheme} filterPopup`}>\n      <h2 className={`filterPopup_header theme-${currentTheme}`}>Filters</h2>\n      <form className={`filterPopup_radioButtons theme-${currentTheme}`}>\n        <div className={`filterPopup_lineDiv theme-${currentTheme}`}>\n          <h3 className={`filterPopup_title theme-${currentTheme}`}>\n            Label color\n          </h3>\n          <label className={`filterPopup_showAllBtn theme-${currentTheme}`}>\n            <input\n              className={`filterPopup_showAllBtnInput`}\n              type=\"radio\"\n              value=\"all\"\n              name=\"priority\"\n              onChange={handleFilter}\n            />\n            Show all\n          </label>\n        </div>\n\n        <label className={`filterPopup_label theme-${currentTheme}`}>\n          <input\n            type=\"radio\"\n            value=\"without\"\n            name=\"priority\"\n            onChange={handleFilter}\n          />\n          <span className={`filterPopup_without grey`}></span>\n          <span>Without priority</span>\n        </label>\n        <label className={`filterPopup_label theme-${currentTheme}`}>\n          <input\n            type=\"radio\"\n            value=\"low\"\n            name=\"priority\"\n            onChange={handleFilter}\n          />\n          <span className={`filterPopup_without blue`}></span>\n          <span> Low</span>\n        </label>\n        <label className={`filterPopup_label theme-${currentTheme}`}>\n          <input\n            type=\"radio\"\n            value=\"medium\"\n            name=\"priority\"\n            onChange={handleFilter}\n          />\n          <span className={`filterPopup_without pink`}></span>\n          <span> Medium</span>\n        </label>\n        <label className={`filterPopup_label theme-${currentTheme}`}>\n          <input\n            type=\"radio\"\n            value=\"high\"\n            name=\"priority\"\n            onChange={handleFilter}\n          />\n          <span className={`filterPopup_without green`}></span>\n          <span>High</span>\n        </label>\n      </form>\n    </div>\n  );\n};\nexport default FilterPopup;\n","import './screensPage.scss';\nimport PopUp from 'components/modal/PopUp';\n// import { useState } from 'react';\nimport Columns from '../columns/Columns';\nimport Icon from '../icon/Icon';\nimport FilterPopup from 'components/filterPopup/FilterPopup';\n// import { themeState } from 'redux/theme/themeSlice';\nimport {\n  selectCurrentTheme,\n  // selectCurrentUserBoards,\n} from 'redux/auth/auth-slice';\nimport { useSelector } from 'react-redux';\nimport ColumnForm from 'components/columnForm/ColumnForm';\n// import { useState } from 'react';\n// import { useParams } from 'react-router-dom';\nimport {\n  selectColumns,\n  // selectCurrentBoard,\n} from 'redux/workplace/workplace-slice';\n\n//temporary\n// const columnsArray = [\n//   { title: 'To Do', id: 1 },\n//   { title: 'In progress', id: 2 },\n//   { title: 'Done', id: 3 },\n//   { title: 'Done', id: 4 },\n//   { title: 'Done', id: 5 },\n//   { title: 'Done', id: 6 },\n//   { title: 'Done', id: 7 },\n//   { title: 'Done', id: 8 },\n// ];\n// const boardArray = [\n//   { title: 'To Do List', id: '1hk677' },\n//   { title: 'Home', id: '289kl0' },\n//   { title: 'Family', id: '34g56' },\n//   { title: 'Garden tree', id: '48hjk90' },\n//   { title: 'Project', id: '51gjj24' },\n//   { title: 'English', id: '6fgh678' },\n//   { title: 'Shopping', id: '73bnm45' },\n// ];\n\nconst ScreensPage = () => {\n  const currentTheme = useSelector(selectCurrentTheme);\n  // const boardArray = useSelector(selectCurrentBoard);\n  const columnsArray = useSelector(selectColumns);\n  // const { boardName } = useParams();\n  // const [currentBoardTitle, setCurrentBoard] = useState('');\n\n  // useEffect(() => {\n  //   const foundBoard = boardArray.find(item => item.id === boardName);\n  //   foundBoard ? setCurrentBoard(foundBoard.title) : setCurrentBoard('');\n  // }, [boardName]);\n  return (\n    <div className={`theme-${currentTheme} screenPage`}>\n      <div className={`screenPage_header theme-${currentTheme}`}>\n        <h1 className={`screenPage_title theme-${currentTheme}`}>\n          {/* {currentBoardTitle} */}\n        </h1>\n        <PopUp\n          data={\n            <span className={`screenPage_filter theme-${currentTheme}`}>\n              <Icon id={'filter'} width={16} height={16} />\n              <span className={`screenPage_filterText theme-${currentTheme}`}>\n                Filter\n              </span>\n            </span>\n          }\n        >\n          <FilterPopup />\n        </PopUp>\n      </div>\n\n      <div className={`screenPage_canvas theme-${currentTheme}`}>\n        <ul className={`screenPage_columns theme-${currentTheme}`}>\n          {columnsArray.map(item => (\n            // console.log(item),\n            <Columns {...item} key={item._id} />\n          ))}\n        </ul>\n\n        <PopUp\n          data={\n            <span className={`screenPage_addButton theme-${currentTheme}`}>\n              <span\n                className={`screenPage_addButtonPlus theme-${currentTheme}`}\n              >\n                <Icon id={'plus'} width={14} height={14} />\n              </span>\n              <span\n                className={`screenPage_addButtonText theme-${currentTheme}`}\n              >\n                Add another column\n              </span>\n            </span>\n          }\n        >\n          <ColumnForm />\n        </PopUp>\n      </div>\n    </div>\n  );\n};\n\nexport default ScreensPage;\n","import React from 'react';\nimport Modal from 'react-modal';\nimport Icon from 'components/icon/Icon';\nimport { selectCurrentTheme } from 'redux/auth/auth-slice';\nimport { useSelector } from 'react-redux';\nimport './popup.scss';\n\nModal.setAppElement('#root');\n\nconst PopUp = props => {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const { children, data } = props;\n  const currentTheme = useSelector(selectCurrentTheme);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // something after modal open\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function cloneChildren(child) {\n    return React.cloneElement(child, {\n      closeModal,\n    });\n  }\n\n  return (\n    <>\n      <button\n        className={`open-modal-button theme-${currentTheme}`}\n        onClick={openModal}\n      >\n        {data}\n      </button>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        className={`modal theme-${currentTheme}`}\n        overlayClassName={`modal-overlay theme-${currentTheme}`}\n        contentLabel=\"modal\"\n      >\n        <button\n          className={`close-modal-button theme-${currentTheme}`}\n          onClick={closeModal}\n        >\n          <Icon id=\"x-close\" width={18} height={18} />\n        </button>\n        {cloneChildren(children)}\n      </Modal>\n    </>\n  );\n};\n\nexport default PopUp;\n"],"names":["props","title","id","closeModal","theme","useSelector","selectCurrentTheme","useState","error","setError","columnName","setColumnName","boardName","useParams","dispatch","useDispatch","className","onSubmit","e","InputTitle","target","elements","value","preventDefault","editColumnById","name","addNewColumn","idBoard","newColumn","type","placeholder","onChange","Icon","width","height","getDeadline","Date","startDate","setStartDate","currentTheme","ExampleCustomInput","forwardRef","ref","_","date","onClick","isToday","format","selected","minDate","calendarStartDay","customInput","calendarClassName","columnId","taskId","data","description","labelColor","deadLine","initialValues","_id","validate","values","errors","setSubmitting","editTaskById","console","log","addNewTask","touched","handleChange","handleBlur","handleSubmit","isSubmitting","onBlur","rows","desc","role","disabled","priority","currentPriority","setCurrentPriority","useEffect","year","getFullYear","month","String","getMonth","padStart","day","getDate","today","formattedDeadline","dateString","parts","split","parseInt","convertToDateFormat","toDateString","text","length","PopUp","deleteTaskById","columnsList","selectColumns","cards","findIndex","item","tasks","filter","filterState","filteredCards","includes","deleteColumnById","handleDeleteButton","map","card","key","handleFilter","changeFilter","document","querySelector","setAttribute","columnsArray","Modal","child","React","modalIsOpen","setIsOpen","children","isOpen","onAfterOpen","onRequestClose","overlayClassName","contentLabel"],"sourceRoot":""}